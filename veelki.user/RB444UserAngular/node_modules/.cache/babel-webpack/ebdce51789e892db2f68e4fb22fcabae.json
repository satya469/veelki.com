{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, switchMap } from \"rxjs/operators\";\nimport * as StackAction from \"../actions/stack.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/http.service\";\nimport * as i3 from \"src/app/services/notification.service\";\nexport let StackEffects = /*#__PURE__*/(() => {\n  class StackEffects {\n    constructor(actions, service, notification) {\n      this.actions = actions;\n      this.service = service;\n      this.notification = notification;\n      this.StackData = createEffect(() => this.actions.pipe(ofType(StackAction.GET_STACK), switchMap(() => this.service.get('Setting/GetStakeLimit').pipe(map(res => {\n        if (res.data != null && res.isSuccess == true) {\n          return StackAction.GET_STACK_SUCCESS({\n            stack: res.data\n          });\n        }\n\n        return StackAction.GET_STACK_SUCCESS({\n          stack: []\n        });\n      })))));\n      this.StackDataUpdate = createEffect(() => this.actions.pipe(ofType(StackAction.UPDATE_STACK), switchMap(data => {\n        return this.service.post('Setting/UpdateStakeLimit', data.stack).pipe(map(res => {\n          if (res.isSuccess == true) {\n            this.notification.showSuccess(res.message);\n            return StackAction.UPDATE_STACK_SUCCESS({\n              stack: data.stack\n            });\n          }\n\n          this.notification.showError(res.message);\n          return StackAction.UPDATE_STACK_SUCCESS({\n            stack: data.stack\n          });\n        }));\n      })));\n    }\n\n  }\n\n  StackEffects.ɵfac = function StackEffects_Factory(t) {\n    return new (t || StackEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpService), i0.ɵɵinject(i3.NotificationService));\n  };\n\n  StackEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StackEffects,\n    factory: StackEffects.ɵfac\n  });\n  return StackEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}