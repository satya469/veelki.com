{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UPDATE_STACK } from 'src/app/store/actions/stack.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/http.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/notification.service\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"@ngrx/store\";\nimport * as i6 from \"@angular/common\";\n\nfunction StackSettingsComponent_dd_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"dd\", 18);\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵelement(2, \"input\", 20);\n    i0.ɵɵelement(3, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n  }\n}\n\nfunction StackSettingsComponent_ng_template_20_dd_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"dd\");\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵelement(2, \"input\", 20);\n    i0.ɵɵelement(3, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r9 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r9);\n  }\n}\n\nfunction StackSettingsComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelementStart(2, \"div\", 23);\n    i0.ɵɵelementStart(3, \"h3\", 24);\n    i0.ɵɵelement(4, \"i\", 25);\n    i0.ɵɵtext(5, \" Setting\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 26);\n    i0.ɵɵlistener(\"click\", function StackSettingsComponent_ng_template_20_Template_a_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const modal_r6 = restoredCtx.$implicit;\n      return modal_r6.dismiss();\n    });\n    i0.ɵɵelement(7, \"i\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 28);\n    i0.ɵɵelementStart(9, \"form\", 12);\n    i0.ɵɵlistener(\"ngSubmit\", function StackSettingsComponent_ng_template_20_Template_form_ngSubmit_9_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.stackSubmit();\n    });\n    i0.ɵɵelementStart(10, \"h3\");\n    i0.ɵɵtext(11, \"Stake\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"div\", 29);\n    i0.ɵɵelementStart(13, \"dl\", 13);\n    i0.ɵɵelementStart(14, \"dt\");\n    i0.ɵɵtext(15, \"Quick Stakes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, StackSettingsComponent_ng_template_20_dd_16_Template, 4, 1, \"dd\", 30);\n    i0.ɵɵelementStart(17, \"dd\", 15);\n    i0.ɵɵelementStart(18, \"button\", 31);\n    i0.ɵɵtext(19, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.stackForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.stackList.controls);\n  }\n}\n\nexport let StackSettingsComponent = /*#__PURE__*/(() => {\n  class StackSettingsComponent {\n    constructor(service, fb, notification, modalService, store) {\n      this.service = service;\n      this.fb = fb;\n      this.notification = notification;\n      this.modalService = modalService;\n      this.store = store;\n      this.isCollapsed = true;\n      this.stackLimitList = [];\n      this.stackForm = this.fb.group({\n        stackList: this.fb.array([])\n      });\n      this.stackData = this.store.select(data => data.StackData);\n    }\n\n    get stackList() {\n      return this.stackForm.get(\"stackList\");\n    }\n\n    stackPatchValue(value) {\n      return this.fb.group({\n        id: [value.id, Validators.required],\n        stakeLimitPrice: [value.stakeLimitPrice, Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      var _a;\n\n      (_a = this.stackData) === null || _a === void 0 ? void 0 : _a.subscribe(stack => {\n        if (stack.length > 0) {\n          this.stackLimitList = stack;\n\n          if (this.stackList.controls.length == 0) {\n            stack.forEach(x => {\n              this.stackList.push(this.stackPatchValue(x));\n            });\n          }\n        }\n      });\n    }\n\n    stackSubmit() {\n      if (this.stackForm.controls.stackList.status == \"INVALID\") {\n        this.notification.showError(\"Enter a valid number.\");\n        return;\n      }\n\n      this.store.dispatch(UPDATE_STACK({\n        state: this.stackLimitList,\n        stack: this.stackForm.controls.stackList.value\n      }));\n      console.log(this.stackForm.controls);\n      return;\n      this.service.post('Setting/UpdateStakeLimit', this.stackForm.controls.stackList.value).subscribe(response => {\n        if (response.isSuccess == true) {\n          this.notification.showSuccess(response.message);\n          this.modalService.dismissAll();\n        }\n      });\n    }\n\n    openStackModal(content) {\n      this.modalService.open(content, {\n        ariaLabelledBy: 'modal-basic-title'\n      });\n    }\n\n  }\n\n  StackSettingsComponent.ɵfac = function StackSettingsComponent_Factory(t) {\n    return new (t || StackSettingsComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.NgbModal), i0.ɵɵdirectiveInject(i5.Store));\n  };\n\n  StackSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StackSettingsComponent,\n    selectors: [[\"app-stack-settings\"]],\n    decls: 22,\n    vars: 5,\n    consts: [[1, \"tab-menu\", \"d-none\", \"d-lg-block\"], [1, \"ver-menu\", \"settingstack\"], [\"href\", \"javascript:;\", 1, \"active\", 3, \"click\"], [1, \"fa\", \"fa-cog\"], [1, \"bet-setting\", \"ml-2\", \"mr-2\", \"d-block\", \"d-lg-none\"], [\"href\", \"javascript:;\", \"href\", \"javascript:;\", 1, \"a-setting\", 3, \"click\"], [\"src\", \"../../../assets/img/transparent.gif\"], [1, \"slip_set-pop\", 3, \"ngbCollapse\", \"ngbCollapseChange\"], [\"collapse\", \"ngbCollapse\"], [1, \"overlay\", \"right-side\"], [1, \"side-wrap\", \"setting-wrap\"], [1, \"side-content\"], [3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"stackList\", 1, \"setting-block\", \"stake-setting\"], [\"class\", \"ng-star-inserted\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-stake_edit\"], [\"type\", \"submit\", \"value\", \"Save\", 1, \"btn-send\", \"ui-link\"], [\"stackModal\", \"\"], [1, \"ng-star-inserted\"], [3, \"formGroupName\"], [\"formControlName\", \"id\", \"type\", \"hidden\"], [\"formControlName\", \"stakeLimitPrice\", \"type\", \"number\", \"min\", \"1\"], [\"id\", \"settingSlide\", 1, \"side-wrap\", \"setting-wrap\"], [1, \"side-head\"], [1, \"a-setting\", \"mb-0\"], [1, \"fa\", \"fa-cog\", \"fa-lg\", \"mr-2\"], [\"href\", \"javascript:;\", \"id\", \"settingClose\", 1, \"close\", \"ui-link\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-times\"], [\"id\", \"coinList\", 1, \"side-content\"], [\"id\", \"google_translate_element\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn-send\", \"ui-link\"]],\n    template: function StackSettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r13 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵelementStart(1, \"li\", 1);\n        i0.ɵɵelementStart(2, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function StackSettingsComponent_Template_a_click_2_listener() {\n          i0.ɵɵrestoreView(_r13);\n\n          const _r0 = i0.ɵɵreference(9);\n\n          return _r0.toggle();\n        });\n        i0.ɵɵtext(3, \"Setting \");\n        i0.ɵɵelement(4, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"a\", 5);\n        i0.ɵɵlistener(\"click\", function StackSettingsComponent_Template_a_click_6_listener() {\n          i0.ɵɵrestoreView(_r13);\n\n          const _r0 = i0.ɵɵreference(9);\n\n          return _r0.toggle();\n        });\n        i0.ɵɵelement(7, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7, 8);\n        i0.ɵɵlistener(\"ngbCollapseChange\", function StackSettingsComponent_Template_div_ngbCollapseChange_8_listener($event) {\n          return ctx.isCollapsed = $event;\n        });\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelementStart(13, \"form\", 12);\n        i0.ɵɵlistener(\"ngSubmit\", function StackSettingsComponent_Template_form_ngSubmit_13_listener() {\n          return ctx.stackSubmit();\n        });\n        i0.ɵɵelementStart(14, \"h3\");\n        i0.ɵɵtext(15, \"Stake\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"dl\", 13);\n        i0.ɵɵtemplate(17, StackSettingsComponent_dd_17_Template, 4, 1, \"dd\", 14);\n        i0.ɵɵelementStart(18, \"dd\", 15);\n        i0.ɵɵelement(19, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, StackSettingsComponent_ng_template_20_Template, 20, 2, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-expanded\", !ctx.isCollapsed);\n        i0.ɵɵadvance(4);\n        i0.ɵɵattribute(\"aria-expanded\", !ctx.isCollapsed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngbCollapse\", ctx.isCollapsed);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.stackForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.stackList.controls);\n      }\n    },\n    directives: [i4.NgbCollapse, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormArrayName, i6.NgForOf, i2.FormGroupName, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.NumberValueAccessor, i2.MinValidator],\n    styles: [\"\"]\n  });\n  StackSettingsComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StackSettingsComponent,\n    factory: StackSettingsComponent.ɵfac,\n    providedIn: 'root'\n  });\n  return StackSettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}