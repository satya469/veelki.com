{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { flatMap, switchMap } from 'rxjs/operators';\nimport 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./session.service\";\nexport let HttpService = /*#__PURE__*/(() => {\n  class HttpService {\n    constructor(http, sessionService) {\n      this.http = http;\n      this.sessionService = sessionService;\n      this.httpParams = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Content-Type',\n          'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT'\n        })\n      };\n    }\n\n    get(url) {\n      return this.getConfig().pipe(flatMap(appSettings => {\n        this.appSettings = appSettings;\n        return this.http.get(appSettings.apiUrl + url).pipe(switchMap(resp => {\n          return of(resp);\n        }));\n      }));\n    }\n\n    post(url, body) {\n      return this.getConfig().pipe(flatMap(appSettings => {\n        this.appSettings = appSettings;\n        return this.http.post(appSettings.apiUrl + url, body).pipe(switchMap(resp => {\n          return of(resp);\n        }));\n      }));\n    }\n\n    getConfig() {\n      if (this.appSettings && this.appSettings.apiUrl) {\n        return of(this.appSettings);\n      } else {\n        return this.http.get('/assets/config.json?v=' + new Date());\n      }\n    }\n\n  }\n\n  HttpService.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SessionService));\n  };\n\n  HttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac,\n    providedIn: 'root'\n  });\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}