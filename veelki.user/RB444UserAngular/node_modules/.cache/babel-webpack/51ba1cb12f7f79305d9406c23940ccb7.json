{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./services/session.service\";\nimport * as i3 from \"./services/loader.service\";\nexport let InterceptorService = /*#__PURE__*/(() => {\n  class InterceptorService {\n    constructor(router, sessionService, loaderService) {\n      this.router = router;\n      this.sessionService = sessionService;\n      this.loaderService = loaderService;\n    }\n\n    intercept(httpRequest, next) {\n      if (httpRequest.url.includes(\"GetMatchOdds\") != true) {\n        this.loaderService.isLoading.next(true);\n      }\n\n      return next.handle(httpRequest).pipe(finalize(() => {\n        if (httpRequest.url.includes(\"SaveBets\") != true && httpRequest.url.includes(\"GetMatchOdds\") != true) {\n          this.loaderService.isLoading.next(false);\n        }\n      }));\n    }\n\n  }\n\n  InterceptorService.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.SessionService), i0.ɵɵinject(i3.LoaderService));\n  };\n\n  InterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac\n  });\n  return InterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}