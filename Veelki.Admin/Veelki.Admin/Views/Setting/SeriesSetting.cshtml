@model IEnumerable<Veelki.Data.Entities.Series>
@using Veelki.Data.Entities;
@{
    ViewBag.Title = "Series Setting";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var sportsList = ViewBag.SportsList as List<Sports>;
}

@*<link href="~/assets/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />*@

<div class="container main_wrap">
    <br />
    <br />
    <h1>Series Settings</h1>
    <div class="row p-4 form-group">
        <div class="col-md-3 total_all">
            <label class="control-label">Status</label>
            <select class="form-control" id="ddlStatus">
                <option value="0">Please Select status</option>
                <option value="1">Active</option>
                <option value="2">Inactive</option>
            </select>

        </div>
        <div class="col-md-3 total_all">
            <label class="control-label">Sport Name</label>
            <select class="form-control" id="ddlSportName">
                <option value="0">Please Select Sport</option>
                @foreach (var item in sportsList)
                {
                    if (item.Id == 4)
                    {
                        <option selected value="@item.Id">@item.SportName</option>
                    }
                    else
                    {
                        <option value="@item.Id">@item.SportName</option>
                    }

                }
            </select>
        </div>

        <div class="col-md-3 mt-auto">
            <button class="btn btn-primary" type="button" onclick="Filter()">Filter</button>
        </div>
    </div>
    <div id="filterList">
        <partial name="_seriesList" model="Model" />
    </div>
</div>

@section PageJs{
    <script src="~/js/custom.js"></script>
    <script type="text/javascript">
        function UpdateSeries(tId, sId) {
            const formData = new FormData();
            formData.append("Status", $('#checkBoxAction_' + tId).prop('checked'));
            formData.append("SportId", sId);
            formData.append("tournamentName", $("#tournamentName_" + tId).val());
            formData.append("tournamentId", tId);

            let uploadAttachmentJson = {
                apiUrl: "@Url.Action("UpdatedSeries", "Setting")",
                postData: formData
            }
            $(".loader").show();
            promiseAjaxPost.call(uploadAttachmentJson, false).then(
                (res) => {
                    $(".loader").hide();;
                    if (res.IsSuccess && res.Status == 200) {
                        messagePopup.responseSuccess(res.Message);
                    } else {
                        messagePopup.responseError(res.Message);
                    }
                },
                (err) => {
                    messagePopup.error(err.statusText);
                }
            )
        }
        function Filter() {
            const formData = new FormData();
            formData.append("status", $('#ddlStatus').val());
            formData.append("SportId", $('#ddlSportName').val());


            let getAircraftJson = {
                apiUrl: "@Url.Action("FilterSeries", "Setting")",
                postData: formData,
                dataType: 'html'
            }
            $(".loader-1.loading-img").show();
            promiseAjaxPost.call(getAircraftJson, false).then(
                (res) => {
                    $(".loader-1.loading-img").hide();
                    $("#filterList").html(res);
                },
                (err) => {
                    messagePopup.error(err.statusText);
                }
            )
        }
    </script>
}

