{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./session.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(session, route) {\n      this.session = session;\n      this.route = route;\n      this._isLoginUser = new BehaviorSubject(this.isLoggedIn());\n    }\n\n    login(userData) {\n      this.session.setSession('USER_DATA', userData);\n\n      this._isLoginUser.next(true);\n\n      this.route.navigateByUrl(\"/home\");\n    }\n\n    isLoggedIn() {\n      let userData = this.session.getSession('USER_DATA');\n\n      if (userData !== null && userData.userName !== null && userData.id > 0 && userData.roleId > 0) {\n        return true;\n      }\n\n      return false;\n    }\n\n    logout() {\n      this.session.removeSession('USER_DATA');\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.SessionService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}