{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs/operators\";\nimport * as SPORT_ACTION from \"../actions/getSport.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/http.service\";\nexport let SportEffect = /*#__PURE__*/(() => {\n  class SportEffect {\n    constructor(actions, service) {\n      this.actions = actions;\n      this.service = service;\n      this.SportData = createEffect(() => this.actions.pipe(ofType(SPORT_ACTION.GET_SPORT), switchMap(() => this.service.get('exchange/GetSportEvents?SportId=0').pipe(map(res => res.isSuccess == true && res.data != null ? SPORT_ACTION.GET_SPORT_SUCCESS({\n        sport: res.data\n      }) : SPORT_ACTION.GET_SPORT_SUCCESS({\n        sport: null\n      }))))));\n    }\n\n  }\n\n  SportEffect.ɵfac = function SportEffect_Factory(t) {\n    return new (t || SportEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpService));\n  };\n\n  SportEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SportEffect,\n    factory: SportEffect.ɵfac\n  });\n  return SportEffect;\n})();","map":null,"metadata":{},"sourceType":"module"}